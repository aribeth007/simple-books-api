AWSTemplateFormatVersion: 2010-09-09
Description: Simple Books API Gateway and Lambda functions

Parameters:
  ApiName:
    Type: String
    Default: simple-books-api
  RetrieveBooksLambdaName:
    Type: String
    Default: retrieve-books
  CreateBooksLambdaName:
    Type: String
    Default: create-books

Resources:

  RetrieveBooksLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref RetrieveBooksLambdaName
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            console.info(`Retrieve books lambda event: ${JSON.stringify(event)}`)
            const response = {
              body: JSON.stringify([
                { id: 1, name: 'Monolith to Microservices', author: 'Sam Newman' },
                { id: 2, name: 'Design It!', author: 'Michael Keeling' },
                { id: 3, name: 'Programming Kotlin', author: 'Venkat Subramaniam' },
              ]),
              statusCode: 200
            }
            return response
          }
      Role: !GetAtt LambdaRole.Arn
      Timeout: 30

  CreateBooksLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref CreateBooksLambdaName
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            console.info(`Lying about creating books lambda event: ${JSON.stringify(event)}`)
            const response = {
              body: JSON.stringify(event.body),
              statusCode: 201
            }
            return response
          }
      Role: !GetAtt LambdaRole.Arn
      Timeout: 30

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:*'
                Effect: Allow
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com

  RestAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: Simple Books API
      Name: !Ref ApiName

  RestAPIDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: RetrieveBooksMethod
    Properties:
      RestApiId: !Ref RestAPI
      StageName: v1

  BooksResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestAPI.RootResourceId
      PathPart: books
      RestApiId: !Ref RestAPI

  RetrieveBooksMethod:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - RetrieveBooksLambda
      - BooksResource
    Properties:
      AuthorizationType: AWS_IAM
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:retrieve-books/invocations
      ResourceId: !Ref BooksResource
      RestApiId: !Ref RestAPI

  CreateBooksMethod:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - CreateBooksLambda
      - BooksResource
    Properties:
      AuthorizationType: AWS_IAM
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:create-books/invocations
      ResourceId: !Ref BooksResource
      RestApiId: !Ref RestAPI

  ApiGatewayInvokePermissionForRetrieveBooks:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt RetrieveBooksLambda.Arn
      Principal: apigateway.amazonaws.com

  ApiGatewayInvokePermissionForCreateBooks:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt CreateBooksLambda.Arn
      Principal: apigateway.amazonaws.com